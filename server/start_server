#!/bin/bash

# Start the vision server

DIR=/home/odroid/VisionServer/server

SCRIPT=visionserver2018.py
# For running standalone (not alongside a RoboRio), add the "--test" option
# 640x480 value
##ARGS="--calib ../data/calibration/c930e_qvga_calib.json"

# 320x240 value
ARGS="--calib ../data/calibration/c930e_qvga_calib.json"

LOG_DIR="logs"
LOG_BASE="visionserver"

logfile_name() {
    if [ ! -d $LOG_DIR ]; then
        mkdir $LOG_DIR
        index=1
    else
        line=$( ls -1t $LOG_DIR/${LOG_BASE}_*.log 2>/dev/null | head -1 )
        if [ -z "$line" ]; then
            index=1
        else
            b=$( basename $line '.log' )
            index=${b#${LOG_BASE}_}
            # this is stupid. Bash interprets the leading 0s as base-8. Say it is base 10.
            index=$(( 10#$index + 1 ))
        fi
    fi
    
    printf "$LOG_DIR/${LOG_BASE}_%05d.log" $index
}

setup_camera() {
    # set camera to fixed focus
    # can't be done in cscore
    # NOTE order matters
    uvcdynctrl -d "$1" -s 'Focus, Auto' 0
    echo -n "$1: Focus, Auto = "
    uvcdynctrl -d "$1" -g 'Focus, Auto'

    uvcdynctrl -d "$1" -s 'Focus (absolute)' 0
    echo -n "$1: Focus (absolute) "
    uvcdynctrl -d "$1" -g 'Focus (absolute)'

    # uvcdynctrl -d "$1" -s 'White Balance Temperature, Auto' 0
    # echo -n "$1: White Balance Temperature, Auto "
    # uvcdynctrl -d "$1" -g 'White Balance Temperature, Auto'

    # uvcdynctrl -d "$1" -s 'White Balance Temperature' 2866
    # echo -n "$1: White Balance Temperature "
    # uvcdynctrl -d "$1" -g 'White Balance Temperature'
}

case "$1" in
    stop)
	pkill -f $SCRIPT
	;;

    start)
        cd $DIR
        LOG_FILE=$( logfile_name )

        setup_camera /dev/video0 >> $LOG_FILE 2>&1
        if [ -c /dev/video1 ]; then
            setup_camera /dev/video1 >> $LOG_FILE 2>&1
        fi
        
        python3 ./$SCRIPT $ARGS >> $LOG_FILE 2>&1 < /dev/null &
	;;

    restart)
	$0 stop
	$0 start
	;;

    *)
	echo "$0 (start|stop|restart)"
	;;
esac
